name: CI Build

env:
  BuildDir: ./bld
  ScriptDir: ./scripts
  SrcDir: ./src
  Product: Mzinga
  BinDir: ./src/Mzinga/bin
  SolutionFile: ./src/Mzinga.sln

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: pwsh

jobs:
  ci_build_and_test:
    name: CI Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build Solution
      run: dotnet build --configuration ${{ matrix.configuration }} ${{ env.SolutionFile }}

    - name: Test Solution
      run: dotnet test --configuration ${{ matrix.configuration }} --no-build ${{ env.SolutionFile }}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name:  ${{ matrix.configuration }}Binaries
        path: ${{ env.BinDir }}/${{ matrix.configuration }}/net6.0

  ci_build_windows:
    name: CI Windows Build
    runs-on: windows-latest
    needs: ci_build_and_test
    strategy:
      matrix:
        target: [Unpacked, Win32, Win64]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.Product }}.${{ matrix.target }}
        path: ${{ env.BuildDir }}/${{ env.Product }}.${{ matrix.target }}.zip

  ci_build_windows_setup:
    name: CI Windows Setup Build
    runs-on: windows-latest
    needs: ci_build_and_test
    strategy:
      matrix:
        target: [Win32.Setup, Win64.Setup]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.Product }}Viewer.${{ matrix.target }}
        path: ${{ env.BuildDir }}/${{ env.Product }}Viewer.${{ matrix.target }}/${{ env.Product }}Viewer.${{ matrix.target }}.msi
    
  ci_build_linux:
    name: CI Linux Build
    runs-on: ubuntu-latest
    needs: ci_build_and_test
    strategy:
      matrix:
        target: [Linux]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.Product }}.${{ matrix.target }}
        path: ${{ env.BuildDir }}/${{ env.Product }}.${{ matrix.target }}.tar.gz
  
  ci_build_macos:
    name: CI MacOS Build
    runs-on: macOS-latest
    needs: ci_build_and_test
    strategy:
      matrix:
        target: [MacOS]
    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.Product }}.${{ matrix.target }}
        path: ${{ env.BuildDir }}/${{ env.Product }}.${{ matrix.target }}.tar.gz
